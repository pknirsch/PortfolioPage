---
title: "Data-driven Solutions"
author: "Oliver F. Anderson - Data Scientist"
description: "My data science portfolio presentation made with revealjs."
draft: false
format:
  revealjs:
    multiplex: true
    preview-links: true
    theme: [css/ofa.scss]
    scrollable: true
    logo: /images/ofa_logo.png
    footer: "Oliver F. Anderson - 2023"
    chalkboard: true
    html-math-method: katex
    incremental: true
    slide-number: c/t
    transition: convex
    code-fold: true
    code-tools: true
categories:
  - health
  - analysis
  - code
  - data wrangling
  - R
  - data visualization
  - web scraping
  - SQL
---

# About Me

::: smaller
## Education

-   Master of Science in Data Science - Willamette University '23

-   Bachelor of Arts in Biology - Willamette University '22
:::

<div>

## Experiences {.smaller}

-   Research Assistant - Willamette University '21

-   Science Collaborative Research Program (SCRP) - Willamette University '21

-   Murdock College Science Research Conference - Willamette University '21

-   Chemistry Tutor - Willamette University '21

</div>

# Projects

::: smaller
## Interactive Visuals

How sunny are my cities?

```{r, plotly, warning=FALSE, message=FALSE}
# load packages and read in data
library(tidyverse)
library(ggiraph)
library(plotly)
library(ggpubr)
# library(widgetframe)
library(patchwork)

sunshine <- readr::read_csv('~/Desktop/quarto-portfolio/posts/avg_sunshine.csv')

# get cities into the right format
sunshine$CITY <- str_to_title(sunshine$CITY)
sunshine$CITY <- str_replace(sunshine$CITY, ",", ", ")
sunshine$CITY <- gsub("(\\w$)", "\\U\\1", sunshine$CITY, perl = TRUE)

# get rid of duplicates
sunshine <- sunshine %>% 
  filter(CITY != "CitY")

sunshine <- sunshine[!duplicated(sunshine$CITY), ]

# get data into the right format
sunshine <- pivot_longer(sunshine, JAN:DEC, names_to = "month", values_to = "temp")

sunshine <- sunshine[, -4]
sunshine$ANN<-as.numeric(sunshine$ANN)
sunshine$temp<-as.numeric(sunshine$temp)
sunshine$month<-str_to_title(sunshine$month)
sunshine$month<-as.factor(sunshine$month)
sunshine$perc_temp<-sunshine$temp/100


sun_cities <- sunshine %>% 
  filter(CITY %in% c("Portland, OR", "Los Angeles, CA", "Honolulu, HI", "Chicago, IL", "Boston, MA"))

sun_cities$month <- factor(sun_cities$month, levels=c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))



# basic line plot for ggiraph
gg_sunshine <- sun_cities %>%  
  ggplot(aes(x = month, y=temp, text = paste0("Percent possible sunshine in\n",CITY, ": ", temp, "% in ", month))) +
  geom_line(aes(x = month, y = temp, color = CITY, group = CITY), alpha=0.8)+
  labs(x="Month", y="Average percent of possible sunshine", color = "City", caption = "Data from Kaggle.com: uploaded by user thedevastator", title = "How sunny are the cities that are important to me?", subtitle = "Measured by time of sunshine reaching earth from sunrise to sunset")+
  theme_minimal()+
  theme(
        plot.title = element_text(vjust = 2),
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  scale_y_continuous(labels = scales::percent_format(scale = 1))+
  scale_color_manual(values=c("black","#0454a4", "#5688c1","#7ca4d4", "#b8cee6"))

ggplotly(gg_sunshine, tooltip = 'text')

```

How sunny is your hometown?

```{r, girafe, warning=FALSE, message=FALSE}
# working on the ggiraph

tooltip_css <- "background-color:#7ca4d4;color:white;padding:5px;border-radius:3px;"

avg_sun <- sunshine %>% group_by(CITY, ANN) %>% summarize() %>% na.omit()

# Creating plots
avg_sun$tooltip <- c(paste0(avg_sun$CITY,": ", avg_sun$ANN, "%"))

sun1 <- avg_sun[1:38,] %>% 
  ggplot()+
  geom_col_interactive(aes(x=reorder(CITY, ANN), y=ANN/100,
                           tooltip = tooltip,
                      data_id = ANN), fill="#0454a4")+
  coord_flip()+
    labs(x="", y="Average annual sunshine")+
  theme_minimal()+
  theme(axis.text.x = element_text(vjust = 2))+
  lims(y=c(0,1))+
  scale_y_continuous(labels = scales::percent)+
  scale_x_discrete(labels=NULL)


sun2<-avg_sun[39:76,] %>% 
  ggplot()+
  geom_col_interactive(aes(x=reorder(CITY, ANN), y=ANN/100,
                           tooltip = tooltip,
                      data_id = ANN), fill="#0454a4")+
  coord_flip()+
    labs(x="", y="Average annual sunshine")+
  theme_minimal()+
  theme(axis.text.x = element_text(vjust = 2))+
  lims(y=c(0,1))+
  scale_y_continuous(labels = scales::percent)+
  scale_x_discrete(labels=NULL)

sun3<-avg_sun[77:115,] %>% 
  ggplot()+
  geom_col_interactive(aes(x=reorder(CITY, ANN), y=ANN/100,
                           tooltip = tooltip,
                      data_id = ANN), fill="#0454a4")+
  coord_flip()+
    labs(x="", y="Average annual sunshine")+
  theme_minimal()+
  theme(axis.text.x = element_text(vjust = 2))+
  lims(y=c(0,1))+
  scale_y_continuous(labels = scales::percent)+
  scale_x_discrete(labels=NULL)

sun4<-avg_sun[116:153,] %>% 
  ggplot()+
  geom_col_interactive(aes(x=reorder(CITY, ANN), y=ANN/100,
                           tooltip = tooltip,
                      data_id = ANN), fill="#0454a4")+
  coord_flip()+
    labs(x="", y="Average annual sunshine")+
  theme_minimal()+
  theme(axis.text.x = element_text(vjust = 2))+
  lims(y=c(0,1))+
  scale_y_continuous(labels = scales::percent)+
  scale_x_discrete(labels=NULL)

 # sun_plots <- ggarrange(
 #  sun1, sun2, sun3, sun4,
 #  common.legend = TRUE,
 #  legend = "right"
 #  )
 p<-ggarrange(sun1, sun2, sun3, sun4, ncol=2, nrow=2, labels=c("A","B","C","D"))
girafe(
  code = print(p + plot_annotation(title="How sunny is your hometown?", subtitle = "Measured by time of sun shine reaching earth from sunrise to sunset", caption = "A: Abilene TX - Des Moines, IA\nB: Detroit, MI - Las Vegas, NV\nC: Lihue, HI - Providence, RI\nD: Pueblo, CO - Yap- W Caroline Is., PC\nData from Kaggle.com: uploaded by user thedevastator", theme = theme(plot.caption.position = "plot", plot.caption = element_text(hjust = 0)))),
  height_svg = 9,
  width_svg = NULL,
  options = list(
    opts_tooltip(css = tooltip_css, opacity = 1),
    opts_sizing(width = .7),
    opts_hover(css = "fill:#0454a4;stroke-width:2;"),
    opts_hover_inv(css = "opacity:0.1;"),
    opts_selection(
      type = "single", 
      only_shiny = FALSE,
      css = "fill:#0454a4"),
    opts_zoom(max=4)
  )
)
```
:::

::: smaller
## Aesthetically Pleasing Tables

Has your team ever won the Super Bowl?

```{r, super-bowl-table, warning=FALSE, message=FALSE}
# load packages and read in data
library(tidyverse)
library(gt)
library(lubridate)

superbowls <- readr::read_csv('~/Desktop/quarto-portfolio/posts/Super_Bowl.csv')
 
# add logos for each team
superbowls <- superbowls %>% 
  mutate(win_logo_url = 
  case_when(
          Winner == "Green Bay Packers" ~ "https://upload.wikimedia.org/wikipedia/commons/5/50/Green_Bay_Packers_logo.svg",
          Winner == "New York Jets" ~ "https://upload.wikimedia.org/wikipedia/en/6/6b/New_York_Jets_logo.svg",
          Winner == "Kansas City Chiefs" ~ "https://upload.wikimedia.org/wikipedia/en/e/e1/Kansas_City_Chiefs_logo.svg",
          Winner == "Baltimore Colts" ~ "https://upload.wikimedia.org/wikipedia/en/1/1f/Baltimore_Colts_logo_1961-1978.gif",
          Winner == "Dallas Cowboys" ~ "https://upload.wikimedia.org/wikipedia/commons/1/15/Dallas_Cowboys.svg",
          Winner == "Miami Dolphins" ~ "https://upload.wikimedia.org/wikipedia/en/3/37/Miami_Dolphins_logo.svg",
          Winner == "Pittsburgh Steelers" ~ "https://upload.wikimedia.org/wikipedia/commons/d/de/Pittsburgh_Steelers_logo.svg",
          Winner == "Oakland Raiders" ~ "https://upload.wikimedia.org/wikipedia/en/4/48/Las_Vegas_Raiders_logo.svg",
          Winner == "Los Angeles Raiders" ~ "https://upload.wikimedia.org/wikipedia/en/4/48/Las_Vegas_Raiders_logo.svg",
          Winner == "San Francisco 49ers" ~ "https://upload.wikimedia.org/wikipedia/commons/3/3a/San_Francisco_49ers_logo.svg",
          Winner == "Washington Redskins" ~ "https://e7.pngegg.com/pngimages/193/260/png-clipart-redskins-logo-red-skins-logo-sports-nfl-football.png",
          Winner == "Chicago Bears" ~ "https://upload.wikimedia.org/wikipedia/commons/5/5c/Chicago_Bears_logo.svg",
          Winner == "New York Giants" ~ "https://upload.wikimedia.org/wikipedia/commons/6/60/New_York_Giants_logo.svg",
          Winner == "Denver Broncos" ~ "https://upload.wikimedia.org/wikipedia/en/4/44/Denver_Broncos_logo.svg",
          Winner == "St. Louis Rams" ~ "https://upload.wikimedia.org/wikipedia/en/8/8b/NFL_Rams_logo.svg",
          Winner == "Baltimore Ravens" ~ "https://upload.wikimedia.org/wikipedia/en/1/16/Baltimore_Ravens_logo.svg",
          Winner == "New England Patriots" ~ "https://upload.wikimedia.org/wikipedia/en/b/b9/New_England_Patriots_logo.svg",
          Winner == "Tampa Bay Buccaneers" ~ "https://upload.wikimedia.org/wikipedia/en/a/a2/Tampa_Bay_Buccaneers_logo.svg",
          Winner == "Indianapolis Colts" ~ "https://upload.wikimedia.org/wikipedia/commons/0/00/Indianapolis_Colts_logo.svg",
          Winner == "New Orleans Saints" ~ "https://upload.wikimedia.org/wikipedia/commons/5/50/New_Orleans_Saints_logo.svg",
          Winner == "Seattle Seahawks" ~ "https://upload.wikimedia.org/wikipedia/en/8/8e/Seattle_Seahawks_logo.svg",
          Winner == "Philadelphia Eagles" ~ "https://upload.wikimedia.org/wikipedia/en/8/8e/Philadelphia_Eagles_logo.svg"
          )
       ) %>% 
  mutate(lose_logo_url = 
  case_when(
          Loser == "Green Bay Packers" ~ "https://upload.wikimedia.org/wikipedia/commons/5/50/Green_Bay_Packers_logo.svg",
            Loser == "Minnesota Vikings" ~ "https://upload.wikimedia.org/wikipedia/en/4/48/Minnesota_Vikings_logo.svg",
          Loser == "Kansas City Chiefs" ~ "https://upload.wikimedia.org/wikipedia/en/e/e1/Kansas_City_Chiefs_logo.svg",
          Loser == "Baltimore Colts" ~ "https://upload.wikimedia.org/wikipedia/en/1/1f/Baltimore_Colts_logo_1961-1978.gif",
          Loser == "Dallas Cowboys" ~ "https://upload.wikimedia.org/wikipedia/commons/1/15/Dallas_Cowboys.svg",
          Loser == "Miami Dolphins" ~ "https://upload.wikimedia.org/wikipedia/en/3/37/Miami_Dolphins_logo.svg",
          Loser == "Pittsburgh Steelers" ~ "https://upload.wikimedia.org/wikipedia/commons/d/de/Pittsburgh_Steelers_logo.svg",
          Loser == "Oakland Raiders" ~ "https://upload.wikimedia.org/wikipedia/en/4/48/Las_Vegas_Raiders_logo.svg",
          Loser == "Los Angeles Rams" ~ "https://upload.wikimedia.org/wikipedia/en/8/8a/Los_Angeles_Rams_logo.svg",
          Loser == "San Francisco 49ers" ~ "https://upload.wikimedia.org/wikipedia/commons/3/3a/San_Francisco_49ers_logo.svg",
          Loser == "Washington Redskins" ~ "https://e7.pngegg.com/pngimages/193/260/png-clipart-redskins-logo-red-skins-logo-sports-nfl-football.png",
          Loser == "Chicago Bears" ~ "https://upload.wikimedia.org/wikipedia/commons/5/5c/Chicago_Bears_logo.svg",
          Loser == "New York Giants" ~ "https://upload.wikimedia.org/wikipedia/commons/6/60/New_York_Giants_logo.svg",
          Loser == "Denver Broncos" ~ "https://upload.wikimedia.org/wikipedia/en/4/44/Denver_Broncos_logo.svg",
          Loser == "St. Louis Rams" ~ "https://upload.wikimedia.org/wikipedia/en/8/8b/NFL_Rams_logo.svg",
           Loser == "Cincinnati Bengals" ~ "https://upload.wikimedia.org/wikipedia/commons/8/81/Cincinnati_Bengals_logo.svg",
          Loser == "New England Patriots" ~ "https://upload.wikimedia.org/wikipedia/en/b/b9/New_England_Patriots_logo.svg",
           Loser == "Buffalo Bills" ~ "https://upload.wikimedia.org/wikipedia/en/7/77/Buffalo_Bills_logo.svg",
          Loser == "Indianapolis Colts" ~ "https://upload.wikimedia.org/wikipedia/commons/0/00/Indianapolis_Colts_logo.svg",
           Loser == "San Diego Chargers" ~ "https://upload.wikimedia.org/wikipedia/en/7/72/NFL_Chargers_logo.svg",
          Loser == "Seattle Seahawks" ~ "https://upload.wikimedia.org/wikipedia/en/8/8e/Seattle_Seahawks_logo.svg",
          Loser == "Philadelphia Eagles" ~ "https://upload.wikimedia.org/wikipedia/en/8/8e/Philadelphia_Eagles_logo.svg",
          Loser == "Atlanta Falcons" ~ "https://upload.wikimedia.org/wikipedia/en/c/c5/Atlanta_Falcons_logo.svg",
          Loser == "Tennessee Titans" ~ "https://upload.wikimedia.org/wikipedia/en/c/c1/Tennessee_Titans_logo.svg",
          Loser == "Carolina Panthers" ~ "https://upload.wikimedia.org/wikipedia/en/1/1c/Carolina_Panthers_logo.svg",
          Loser == "Arizona Cardinals" ~ "https://upload.wikimedia.org/wikipedia/en/7/72/Arizona_Cardinals_logo.svg"
          )
       )

# Choosing a subset of columns to display basic information about the Super Bowl
superbowls<-superbowls %>% 
  dplyr::select("SB", "Date", "win_logo_url", "Winner", "Winning Pts", "lose_logo_url", "Loser", "Losing Pts", "City", "State")

# convert to date format
superbowls$Date <- as.Date(superbowls$Date, '%d-%b-%Y') %m+% years(2000) 
# convert to 4 digit year format
superbowls$Date <- dplyr::if_else(superbowls$Date > '2023-01-01', superbowls$Date %m-% years(100), superbowls$Date)


# create gt table  
superbowls %>% 
  gt() %>% 
  # add title and subtitle
  tab_header(
    title = md("**Super Bowl Winners**"),
    subtitle = "Super Bowl I-LII"
  ) %>%
  # format date
  fmt_date(
    columns = Date,
    date_style = 5
  ) %>%
  # add winning team label
  tab_spanner(
    label = md("**Winning Team**"),
    columns = c(win_logo_url, Winner, `Winning Pts`)
  ) %>% 
  # add losing team label
  tab_spanner(
    label = "Losing Team",
    columns = c(lose_logo_url, Loser, `Losing Pts`)
  ) %>% 
  # add location label
  tab_spanner(
    label = "Location",
    columns = c(City, State)
  ) %>% 
  # add super bowl label
  tab_spanner(
    label = "Super Bowl",
    columns = c(SB, Date)
  ) %>% 
  # align the text to center
  cols_align(
    align = "center") %>% 
  # change names of columns
  cols_label(
    SB = "Number",
    Winner = md("**Name**"),
    `Winning Pts` = md("**Points**"),
    Loser = "Name",
    `Losing Pts` = "Points"
  ) %>%
  # convert urls to images
  text_transform(
    #Apply a function to a column
    locations = cells_body(c(win_logo_url, lose_logo_url)),
    fn = function(x) {
      #Return an image of set dimensions
      web_image(
        url = x,
        height = 12
      )
    }
  ) %>%
  #Hide column headers and reduce width
  cols_width(c(win_logo_url, lose_logo_url) ~ px(30)) %>% 
  cols_label(win_logo_url = "") %>% 
  cols_label(lose_logo_url = "") %>%
  # change colors of winning and losing teams
  tab_style(
    style = list(
      cell_fill("darkseagreen1"),
      cell_text(weight = "bold")
    ),
    locations = cells_body(
      columns = c(win_logo_url, Winner, `Winning Pts`)
    )
  ) %>% 
  tab_style(
    style = list(
      cell_fill("#FFADAD")
    ),
    locations = cells_body(
      columns = c(lose_logo_url, Loser, `Losing Pts`)
    )
  ) %>% 
  # add reference footnote
  tab_source_note(
    source_note = html("Source: <b>Super Bowl Results, Officials, and MVPs</b>, dataset uploaded by user thedevastator to <a href ='https://www.kaggle.com/datasets/thedevastator/super-bowl-results-officials-and-mvps-1967-2020'>Kaggle.com</a>.")
  )
```
:::

# Interactive Shiny Apps

::: smaller
##  {background-iframe="https://oliver-f-anderson.shinyapps.io/Obesity_Health_United_States_CDC/" background-interactive="True"}
:::

::: smaller
##  {background-iframe="https://oliver-f-anderson.shinyapps.io/Vacation_Planner/" background-interactive="True"}
:::

::: smaller
## Database Construction & Web-scraping

-   Used a Docker container to run a continuous R scraping script

-   Scraped daily currency rates from API

-   Stored data in PostgreSQL relational database

-   Fully automated

. . .

::: incremental
<img src="/images/currency_relational_database.png"/>

**Fig 1:** Entity Relationship Diagram for the database. Primary keys and linking relationships are shown.
:::
:::

::: smaller
##  {background-image="/images/currency-rates-project.jpg" background-size="contain"}
:::

::: smaller
## Development of RNA-Seq Data Wrangling Pipeline

-   Worked with a group of bacteria capable of degrading polyethylene terephthalate (PET) plastic

-   Determined optimal software pipeline for cleaning data from RNA sequencing (RNA-Seq)

-   Processed and cleaned RNA-Seq data for analysis

-   Determined possible key proteins and enzymes involved in degradation of plastic

-   Developed theoretical enzymatic pathway for degradation of plastic by microbes

-   Worked in a multi-institutional team on an NSF funded project

-   Presented work at Murdock College Research Conference

-   Work was published in 2022 (<a href="https://www.mdpi.com/1422-0067/23/10/5612" style="color:red">link</a>)
:::

# Contact

::: columns
::: {.column width="50%"}
<a href="https://github/oliverfanderson"> ![GitHub Logo](images/github-mark.png){.center alt="GitHub Logo" style="width:240px;height:240px;"} </a>
:::

::: {.column width="50%"}
<a href="https://linkedin.com/in/oliver-f-anderson"> ![LinkedIn Logo](images/LI-In-Bug.png){.center alt="LinkedIn Logo" style="width:282px;height:240px;"} </a>
:::
:::

# Thank You
